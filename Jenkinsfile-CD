pipeline {
    agent any

    environment {
        AWS_REGION = 'eu-west-1'
        CLUSTER_NAME = 'qr-cluster'
        SERVICE_NAME = 'qr-app-service'
        TASK_FAMILY = 'qr-app-td'
        NEW_IMAGE_TAG = 'latest'
        DOCKER_APP_IMAGE = 'godcandidate/qr-code-app'
    }

    stages {
        stage('Approval') {
            steps {
                input message: 'Do you want to deploy the new image to AWS ECS?', ok: 'Deploy'
            }
        }

        stage('Check Task Definition') {
            steps {
                withAWS(credentials: 'qr-aws-cred', region: "${AWS_REGION}") {
                    sh '''
                    echo "Checking Task Definition: $TASK_FAMILY"
                    aws ecs describe-task-definition --task-definition $TASK_FAMILY --region $AWS_REGION > task-def.json
                    '''
                }
            }
        }

        stage('Update Task Definition') {
            steps {
                script {
                    withAWS(credentials: 'qr-aws-cred', region: "${AWS_REGION}") {
                        // Step 1: Extract only the required fields from the task definition
                        sh """
                        echo "Extracting required fields from task definition"
                        cat task-def.json | jq '{family: .taskDefinition.family, containerDefinitions: [.taskDefinition.containerDefinitions[] | .image = "${DOCKER_APP_IMAGE}:${NEW_IMAGE_TAG}"], volumes: .taskDefinition.volumes, networkMode: .taskDefinition.networkMode, executionRoleArn: .taskDefinition.executionRoleArn, taskRoleArn: .taskDefinition.taskRoleArn, placementConstraints: .taskDefinition.placementConstraints, requiresCompatibilities: .taskDefinition.requiresCompatibilities, cpu: .taskDefinition.cpu, memory: .taskDefinition.memory}' > updated-task-def.json
                        """

                        // Step 2: Register the updated task definition
                        sh '''
                        echo "Registering updated task definition"
                        aws ecs register-task-definition --cli-input-json file://updated-task-def.json --region $AWS_REGION
                        '''
                    }
                }
            }
        }

        stage('Update ECS Service') {
            steps {
                withAWS(credentials: 'qr-aws-cred', region: "${AWS_REGION}") {
                    sh '''
                    echo "Updating ECS Service: $SERVICE_NAME"
                    aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --task-definition $TASK_FAMILY --region $AWS_REGION
                    '''
                }
            }
        }
    }
}